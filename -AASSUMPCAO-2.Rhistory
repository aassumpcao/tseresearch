readRDS('file.Rds')
rm(list = ls())
installed.packages()
str(installed.packages())
dimnames(installed.packages())
installed.packages()[[1]]
installed.packages()[1]
installed.packages()'1'
installed.packages()['1']
packages <- installed.packages()
packages[1]
packages[[1]]
packages %>% str()
attr(packages)
attr(packages,1)
attr(packages,'1')
attr(packages,'dimnames')
as.list(dimnames(packages))
unlist(dimnames(packages))
unlist(dimnames(packages))[1:389]
saveRDS(unlist(dimnames(packages))[1:389], file = 'Rpackages.Rds')
rm(list = ls())
library(tidyverse)
library(magrittr)
library(readr)
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
rejections <- readRDS('rejetions.Rds')
getwd()
rejections <- readRDS('rejections.Rds')
load('data/prevented2016.Rda')
rejectionReasons <- prevented2016 %$%
table(DS_MOTIVO_CASSACAO) %>%
dimnames() %>%
unlist() %>%
unname()
saveRDS(rejectionReasons, file = 'rejections.Rds')
load('data/electoral.crimes.Rda')
load('data/tseSentences.Rda')
rejectionReasons <- prevented2016 %$%
table(DS_MOTIVO_CASSACAO) %>%
dimnames() %>%
unlist() %>%
unname()
join <- c('ANO_ELEICAO', 'SEQUENCIAL_CANDIDATO' = 'SQ_CANDIDATO')
electoral.crimes %<>% left_join(select(prevented2016, c(3, 11:12)), by = join)
multipleCrimeCandidates <- electoral.crimes %>%
group_by(scraperID) %>%
filter(n() > 1) %>%
select(scraperID) %>%
unlist() %>%
unique()
cand1 <- filter(electoral.crimes, !(scraperID %in% multipleCrimeCandidates))
cand2 <- filter(electoral.crimes,   scraperID %in% multipleCrimeCandidates)
cand2 %<>% group_by(scraperID) %>%
mutate(crime = row_number()) %>%
ungroup() %>%
spread(crime, DS_MOTIVO_CASSACAO) %>%
unite(DS_MOTIVO_CASSACAO, '1', '2', '3', sep = ';')
electoral.crimes <- bind_rows(cand1, cand2)
electoral.crimes
load('electoral.crimes.Rda')
load('data/electoral.crimes.Rda')
assign('electoralResults', electoral.crimes)
rm(electoral.crimes)
save(electoralResults, file = 'data/electoralResults.Rda')
### electoral crime and performance paper
# candidacy rejections wrangling
#   this script wrangles the candidacy rejections independently reported by tse.
#   unfortunately, they only released such information for 2014 and 2016. the
#   data here is useful, however, because it provides the most important reasons
#   why candidates have their candidacies rejected.
# author: andre assumpcao
# by andre.assumpcao@gmail.com
### import statements
# import packages
library(tidyverse)
library(magrittr)
# load datasets
load('data/prevented2016.Rda')
load('data/electoralResults.Rda')
load('data/tseSentences.Rda')
### body
# find list of reasons to reject a candidacy
rejectionReasons <- prevented2016 %$%
table(DS_MOTIVO_CASSACAO) %>%
dimnames() %>%
unlist() %>%
unname()
# match candidates to the reason their candidacies were rejected
join <- c('ANO_ELEICAO', 'SEQUENCIAL_CANDIDATO' = 'SQ_CANDIDATO')
# join candidate list with information about electoral crimes in 2016
electoralResults %<>% left_join(select(prevented2016, c(3, 11:12)), by = join)
# check candidates who had more than one rejection reason listed
multipleCrimeCandidates <- electoralResults %>%
group_by(scraperID) %>%
filter(n() > 1) %>%
select(scraperID) %>%
unlist() %>%
unique()
# subset data
cand1 <- filter(electoralResults, !(scraperID %in% multipleCrimeCandidates))
cand2 <- filter(electoralResults,   scraperID %in% multipleCrimeCandidates)
# reshape data to get multiple crimes in the same cell in the data
cand2 %<>% group_by(scraperID) %>%
mutate(crime = row_number()) %>%
ungroup() %>%
spread(crime, DS_MOTIVO_CASSACAO) %>%
unite(DS_MOTIVO_CASSACAO, '1', '2', '3', sep = ';')
electoralCrimes <- bind_rows(cand1, cand2)
saveRDS(rejectionReasons, file = 'rejections.Rds')
save(electoralCrimes, file = 'electoralCrimes.Rda')
rm(list = ls())
cat("\014")
library(tidyverse)
library(magrittr)
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rm(list = ls())
library(here)
library(tidyverse)
library(magrittr)
load('candidates.pending.Rda')
load('data/candidates.pending.Rda')
for (i in seq(2004, 2016, 4)) {
load(paste0('data/results', as.character(i), '.Rda'))
load(paste0('data/sections', as.character(i), '.Rda'))
}
candidates.pending %<>% filter(CODIGO_CARGO != 12)
candidates2004 <- candidates.pending %>% filter(ANO_ELEICAO == 2004)
candidates2008 <- candidates.pending %>% filter(ANO_ELEICAO == 2008)
candidates2012 <- candidates.pending %>% filter(ANO_ELEICAO == 2012)
candidates2016 <- candidates.pending %>% filter(ANO_ELEICAO == 2016)
cities <- candidates2004 %$% unique(SIGLA_UE)
people <- candidates2004 %$% unique(NUMERO_CANDIDATO)
results2004 %<>%
mutate(candidateID = SQ_CANDIDATO) %>%
group_by(SIGLA_UE, NUM_TURNO, candidateID) %>%
summarize(votes = sum(TOTAL_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2004 %<>%
mutate_all(as.character) %>%
mutate(candidateID = SEQUENCIAL_CANDIDATO) %>%
left_join(results2004, by = c('SIGLA_UE', 'candidateID', 'NUM_TURNO')) %>%
mutate(votes = ifelse(is.na(votes) | votes == 0, NA_character_, votes))
sections2004 %<>%
filter(SIGLA_UE %in% cities) %>%
filter(NUM_VOTAVEL %in% people) %>%
group_by(SIGLA_UE, NUM_TURNO, CODIGO_CARGO, NUM_VOTAVEL) %>%
summarize(votes = sum(QTDE_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2004 %<>% left_join(sections2004, by = c('SIGLA_UE', 'NUM_TURNO',
'CODIGO_CARGO', 'NUMERO_CANDIDATO' = 'NUM_VOTAVEL'))
candidates2004 %<>%
filter(!is.na(votes.x) | !is.na(votes.y)) %>%
mutate(votes = ifelse(is.na(votes.x), votes.y, votes.x))
cities <- candidates2008 %$% unique(SIGLA_UE)
people <- candidates2008 %$% unique(NUMERO_CANDIDATO)
results2008 %<>%
mutate(candidateID = SQ_CANDIDATO) %>%
group_by(SIGLA_UE, NUM_TURNO, candidateID) %>%
summarize(votes = sum(TOTAL_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2008 %<>%
mutate_all(as.character) %>%
mutate(candidateID = SEQUENCIAL_CANDIDATO) %>%
left_join(results2008, by = c('SIGLA_UE', 'candidateID', 'NUM_TURNO')) %>%
mutate(votes = ifelse(is.na(votes) | votes == 0, NA_character_, votes))
sections2008 %<>%
filter(SIGLA_UE %in% cities) %>%
filter(NUM_VOTAVEL %in% people) %>%
group_by(SIGLA_UE, NUM_TURNO, CODIGO_CARGO, NUM_VOTAVEL) %>%
summarize(votes = sum(QTDE_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2008 %<>% left_join(sections2008, by = c('SIGLA_UE', 'NUM_TURNO',
'CODIGO_CARGO', 'NUMERO_CANDIDATO' = 'NUM_VOTAVEL'))
candidates2008 %<>%
filter(!is.na(votes.x) | !is.na(votes.y)) %>%
mutate(votes = ifelse(is.na(votes.x), votes.y, votes.x))
cities <- candidates2012 %$% unique(SIGLA_UE)
people <- candidates2012 %$% unique(NUMERO_CANDIDATO)
results2012 %<>%
mutate(candidateID = SQ_CANDIDATO) %>%
group_by(SIGLA_UE, NUM_TURNO, candidateID) %>%
summarize(votes = sum(TOTAL_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2012 %<>%
mutate_all(as.character) %>%
mutate(candidateID = SEQUENCIAL_CANDIDATO) %>%
left_join(results2012, by = c('SIGLA_UE', 'candidateID', 'NUM_TURNO')) %>%
mutate(votes = ifelse(is.na(votes) | votes == 0, NA_character_, votes))
sections2012 %<>%
filter(SIGLA_UE %in% cities) %>%
filter(NUM_VOTAVEL %in% people) %>%
group_by(SIGLA_UE, NUM_TURNO, CODIGO_CARGO, NUM_VOTAVEL) %>%
summarize(votes = sum(QTDE_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2012 %<>% left_join(sections2012, by = c('SIGLA_UE', 'NUM_TURNO',
'CODIGO_CARGO', 'NUMERO_CANDIDATO' = 'NUM_VOTAVEL'))
candidates2012 %<>%
filter(!is.na(votes.x) | !is.na(votes.y)) %>%
mutate(votes = ifelse(is.na(votes.x), votes.y, votes.x))
cities <- candidates2016 %$% unique(SIGLA_UE)
people <- candidates2016 %$% unique(NUMERO_CANDIDATO)
results2016 %<>%
mutate(candidateID = SQ_CANDIDATO) %>%
group_by(SIGLA_UE, NUM_TURNO, candidateID) %>%
summarize(votes = sum(TOTAL_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2016 %<>%
mutate_all(as.character) %>%
mutate(candidateID = SEQUENCIAL_CANDIDATO) %>%
left_join(results2016, by = c('SIGLA_UE', 'candidateID', 'NUM_TURNO')) %>%
mutate(votes = ifelse(is.na(votes) | votes == 0, NA_character_, votes))
sections2016 %<>%
filter(SIGLA_UE %in% cities) %>%
filter(NUM_VOTAVEL %in% people) %>%
group_by(SIGLA_UE, NUM_TURNO, CODIGO_CARGO, NUM_VOTAVEL) %>%
summarize(votes = sum(QTDE_VOTOS)) %>%
ungroup() %>%
mutate_all(as.character)
candidates2016 %<>% left_join(sections2016, by = c('SIGLA_UE', 'NUM_TURNO',
'CODIGO_CARGO', 'NUMERO_CANDIDATO' = 'NUM_VOTAVEL'))
candidates2016 %<>%
filter(!is.na(votes.x) | !is.na(votes.y)) %>%
mutate(votes = ifelse(is.na(votes.x), votes.y, votes.x))
candidates <- bind_rows(candidates2004, candidates2008, candidates2012,
candidates2016)
candidates %<>%
mutate(trialCrime  = ifelse(COD_SITUACAO_CANDIDATURA == 16, 0, 1),
appealCrime = ifelse(is.na(votes.x), 1, 0))
assign('electoralResults', candidates)
save(electoralResults, file = 'data/electoralResults.Rda')
assign('electoralCrimes', electoralResults)
save(electoralCrimes, file = 'data/electoralCrimes.Rda')
### electoral crime and performance paper
# candidacy rejections wrangling
#   this script wrangles the candidacy rejections independently reported by tse.
#   unfortunately, they only released such information for 2014 and 2016. the
#   data here is useful, however, because it provides the most important reasons
#   why candidates have their candidacies rejected.
# author: andre assumpcao
# by andre.assumpcao@gmail.com
### import statements
# import packages
library(tidyverse)
library(magrittr)
# load datasets
load('data/prevented2016.Rda')
load('data/electoralResults.Rda')
load('data/tseSentences.Rda')
### body
# find list of reasons to reject a candidacy
rejectionReasons <- prevented2016 %$%
table(DS_MOTIVO_CASSACAO) %>%
dimnames() %>%
unlist() %>%
unname()
# match candidates to the reason their candidacies were rejected
join <- c('ANO_ELEICAO', 'SEQUENCIAL_CANDIDATO' = 'SQ_CANDIDATO')
# join candidate list with information about electoral crimes in 2016
electoralResults %<>% left_join(select(prevented2016, c(3, 11:12)), by = join)
# check candidates who had more than one rejection reason listed
multipleCrimeCandidates <- electoralResults %>%
group_by(scraperID) %>%
filter(n() > 1) %>%
select(scraperID) %>%
unlist() %>%
unique()
# subset data
cand1 <- filter(electoralResults, !(scraperID %in% multipleCrimeCandidates))
cand2 <- filter(electoralResults,   scraperID %in% multipleCrimeCandidates)
# reshape data to get multiple crimes in the same cell in the data
cand2 %<>% group_by(scraperID) %>%
mutate(crime = row_number()) %>%
ungroup() %>%
spread(crime, DS_MOTIVO_CASSACAO) %>%
unite(DS_MOTIVO_CASSACAO, '1', '2', '3', sep = ';')
# bind everything back
electoralCrimes <- bind_rows(cand1, cand2)
# remove useless objects
rm(cand1, cand2, prevented2016, join, multipleCrimeCandidates)
# save rejections vector and dataset including electoral crimes for 2016
saveRDS(rejectionReasons, file = 'rejections.Rds')
save(electoralCrimes, file = 'electoralCrimes.Rda')
save(electoralCrimes, file = 'data/electoralCrimes.Rda')
rm(list = ls())
q('no')
library(tidyverse)
library(magrittr)
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
rejections %>% as.vector()
tseSentences
electoralCrimes
tseSentences %$% table(DS_MOTIVO_CASSACAO)
electoralCrimes %$% table(DS_MOTIVO_CASSACAO)
electoralCrimes %$% table(unique(DS_MOTIVO_CASSACAO))
electoralCrimes %$% table(is.na(DS_MOTIVO_CASSACAO))
electoralCrimes %$% table(DS_MOTIVO_CASSACAO)
rejections
rejections %>% as.vector()
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections[neworder]
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <- rejections[neworder]
electoralCrimes %$% table(DS_MOTIVO_CASSACAO)
paste0(1:8)
names(rejections) <- paste0(1:8)
rejections
rejections <- readRDS('rejections.Rds')
names(rejections) <- rejections[neworder]
rejections
rejections <- paste0(1:8)
rejections
rejections <- c(1:8)
rejections
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
names(rejections) <- rejections[neworder]
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
names(rejections) <- rejections
rejections <- readRDS('rejections.Rds')
names(rejections) <- rejections
rejections
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
for (reason in rejections) {
electoralCrimes %>%
mutate(DS_MOTIVO_CASSACAO = if_else(str_detect(DS_MOTIVO_CASSACAO,
as.character(reason)),
as.character(reason),
DS_MOTIVO_CASSACAO))
}
for (reason in rejections) {
electoralCrimes %>%
mutate(DS_MOTIVO_CASSACAO = if_else(str_detect(DS_MOTIVO_CASSACAO,
as.character(reason)),
as.character(reason),
DS_MOTIVO_CASSACAO)) %$%
table(DS_MOTIVO_CASSACAO)
}
for (reason in rejections) {
electoralCrimes %>%
mutate(DS_MOTIVO_CASSACAO = ifelse(str_detect(DS_MOTIVO_CASSACAO,
as.character(reason)),
as.character(reason),
DS_MOTIVO_CASSACAO)) %$%
table(DS_MOTIVO_CASSACAO)
}
for (reason in rejections) {
electoralCrimes %>%
mutate(DS_MOTIVO_CASSACAO = ifelse(str_detect(DS_MOTIVO_CASSACAO,
as.character(reason)),
as.character(reason),
DS_MOTIVO_CASSACAO)) %$%
table(DS_MOTIVO_CASSACAO) %>%
print()
}
for (reason in rejections) {
electoralCrimes %<>%
mutate(DS_MOTIVO_CASSACAO = ifelse(str_detect(DS_MOTIVO_CASSACAO,
as.character(reason)),
as.character(reason),
DS_MOTIVO_CASSACAO))
}
electoralCrimes%$%table(DS_MOTIVO_CASSACAO)
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
for (reason in seq_along(rejections)) {
electoralCrimes %<>%
mutate(DS_MOTIVO_CASSACAO = ifelse(str_detect(DS_MOTIVO_CASSACAO,
as.character(reason)),
as.character(reason),
DS_MOTIVO_CASSACAO))
}
electoralCrimes%$%table(DS_MOTIVO_CASSACAO)
rejections
for (reason in seq_along(rejections)) {
electoralCrimes %<>%
mutate(DS_MOTIVO_CASSACAO = ifelse(
str_detect(DS_MOTIVO_CASSACAO, paste0(as.character(reason)), '[;\\.]?'),
as.character(reason),
DS_MOTIVO_CASSACAO)
)
}
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
for (reason in seq_along(rejections)) {
electoralCrimes %<>%
mutate(DS_MOTIVO_CASSACAO = ifelse(
str_detect(DS_MOTIVO_CASSACAO, paste0(as.character(reason), '[;\\.]?')),
as.character(reason),
DS_MOTIVO_CASSACAO)
)
}
electoralCrimes %$% table(DS_MOTIVO_CASSACAO)
rejections
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
for (reason in rejections) {
print(reason)
}
rejections[1]
rejections
for (i in 1:8) {
electoralCrimes %<>%
mutate(
DS_MOTIVO_CASSACAO = ifelse(str_detect(DS_MOTIVO_CASSACAO, rejections[i]),
rejections[i],
DS_MOTIVO_CASSACAO)
)
}
electoralCrimes%$%table(DS_MOTIVO_CASSACAO)
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
for (i in 1:8) {
electoralCrimes %<>%
mutate(
rejection = ifelse(str_detect(DS_MOTIVO_CASSACAO, rejections[i]),
rejections[i],
NA_character_)
)
}
electoralCrimes$rejection %>% table()
for (i in seq(1, 8)) {
electoralCrimes %<>%
mutate(
rejection = ifelse(str_detect(DS_MOTIVO_CASSACAO, rejections[i]),
rejections[i],
NA_character_)
)
}
electoralCrimes$rejection %>% table()
library(tidyverse)
library(magrittr)
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
rejections
?if_else
?str_detecet
?str_detect
str_detect(rejections, 'limpa')
str_detect(rejections, 'Limpa')
?str_detect
library(tidyverse)
library(magrittr)
load('data/tseSummary.Rda')
load('data/tseUpdates.Rda')
load('data/tseSentences.Rda')
load('data/electoralCrimes.Rda')
rejections <- readRDS('rejections.Rds')
neworder <- c(5, 3, 1, 4, 6, 7, 8, 2)
rejections <-  rejections[neworder]
rejections
for (rejection in seq(1:8)) {
electoralCrimes %<>%
mutate(rejections = ifelse(match(DS_MOTIVO_CASSACAO, rejections[rejection]),
rejections[rejection],
NA_character_))
}
?ggsave
library(tidyverse)
?ggsave
library(tidyverse)
?geom_histogram
?library
?quanteda
library(quanteda)
if (!require(AER))       {install.packages('AER')}
require(AER) == TRUE
!require(AER)
require(AER)
if (!require(here))      {install.packages('here')}
